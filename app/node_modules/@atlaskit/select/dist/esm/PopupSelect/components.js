import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";

/** @jsx jsx */
import { components } from 'react-select';
import { jsx } from '@emotion/core';
import SearchIcon from '@atlaskit/icon/glyph/editor/search';
import { layers } from '@atlaskit/theme/constants';
import { N40A } from '@atlaskit/theme/colors';
import { token } from '@atlaskit/tokens';
export var MenuDialog = function MenuDialog(_ref) {
  var maxWidth = _ref.maxWidth,
      minWidth = _ref.minWidth,
      children = _ref.children,
      id = _ref.id,
      style = _ref.style;
  return jsx("div", {
    css: {
      backgroundColor: token('color.background.overlay', 'white'),
      borderRadius: 4,
      boxShadow: token('shadow.overlay', "0 0 0 1px ".concat(N40A, ", 0 4px 11px ").concat(N40A)),
      maxWidth: maxWidth,
      minWidth: minWidth,
      zIndex: layers.modal()
    },
    style: style,
    id: id
  }, children);
}; // ==============================
// Custom Components
// ==============================

var DropdownIndicator = function DropdownIndicator() {
  return jsx("div", {
    css: {
      marginRight: 2,
      textAlign: 'center',
      width: 32
    }
  }, jsx(SearchIcon, {
    label: "open"
  }));
};

var Control = function Control(_ref2) {
  var innerRef = _ref2.innerRef,
      innerProps = _ref2.innerProps,
      props = _objectWithoutProperties(_ref2, ["innerRef", "innerProps"]);

  return jsx("div", {
    ref: innerRef,
    css: {
      padding: '8px 8px 4px'
    }
  }, jsx(components.Control, _extends({}, props, {
    innerProps: innerProps
  })));
};

export var DummyControl = function DummyControl(props) {
  return jsx("div", {
    css: {
      border: 0,
      clip: 'rect(1px, 1px, 1px, 1px)',
      height: 1,
      overflow: 'hidden',
      padding: 0,
      position: 'absolute',
      whiteSpace: 'nowrap',
      width: 1
    }
  }, jsx(components.Control, props));
}; // NOTE `props` intentionally omitted from `Fragment`
// eslint-disable-next-line

var Menu = function Menu(_ref3) {
  var children = _ref3.children,
      innerProps = _ref3.innerProps,
      props = _objectWithoutProperties(_ref3, ["children", "innerProps"]);

  return jsx("div", innerProps, children);
};

export var defaultComponents = {
  Control: Control,
  DropdownIndicator: DropdownIndicator,
  Menu: Menu
};